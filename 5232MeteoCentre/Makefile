#############################################################################
# Makefile for building: meteoCentre
# Generated by qmake (2.01a) (Qt 4.8.4) on: Wed Jul 10 11:48:30 2013
# Project:  meteoCentre.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug CONFIG+=declarative_debug -o Makefile meteoCentre.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_SQL_LIB -DQT_XML_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtNetwork -I/usr/include/QtXml -I/usr/include/QtSql -I/usr/include -I.
LINK          = g++
LFLAGS        = -m64
LIBS          = $(SUBLIBS)  -L/usr/lib64 -lQtSql -L/usr/lib64 -lQtXml -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		preferences.cpp \
		wpsrun.cpp \
		ftpclient.cpp \
		psqldriver.cpp \
		csvtopsql.cpp \
		psqltocsv.cpp moc_preferences.cpp \
		moc_wpsrun.cpp \
		moc_ftpclient.cpp \
		moc_psqldriver.cpp \
		moc_csvtopsql.cpp \
		moc_psqltocsv.cpp
OBJECTS       = main.o \
		preferences.o \
		wpsrun.o \
		ftpclient.o \
		psqldriver.o \
		csvtopsql.o \
		psqltocsv.o \
		moc_preferences.o \
		moc_wpsrun.o \
		moc_ftpclient.o \
		moc_psqldriver.o \
		moc_csvtopsql.o \
		moc_psqltocsv.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		meteoCentre.pro
QMAKE_TARGET  = meteoCentre
DESTDIR       = 
TARGET        = meteoCentre

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: meteoCentre.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib64/libQtSql.prl \
		/usr/lib64/libQtCore.prl \
		/usr/lib64/libQtXml.prl \
		/usr/lib64/libQtNetwork.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug CONFIG+=declarative_debug -o Makefile meteoCentre.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/declarative_debug.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib64/libQtSql.prl:
/usr/lib64/libQtCore.prl:
/usr/lib64/libQtXml.prl:
/usr/lib64/libQtNetwork.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug CONFIG+=declarative_debug -o Makefile meteoCentre.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/meteoCentre1.0.0 || $(MKDIR) .tmp/meteoCentre1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/meteoCentre1.0.0/ && $(COPY_FILE) --parents preferences.h wpsrun.h ftpclient.h psqldriver.h csvtopsql.h psqltocsv.h .tmp/meteoCentre1.0.0/ && $(COPY_FILE) --parents main.cpp preferences.cpp wpsrun.cpp ftpclient.cpp psqldriver.cpp csvtopsql.cpp psqltocsv.cpp .tmp/meteoCentre1.0.0/ && (cd `dirname .tmp/meteoCentre1.0.0` && $(TAR) meteoCentre1.0.0.tar meteoCentre1.0.0 && $(COMPRESS) meteoCentre1.0.0.tar) && $(MOVE) `dirname .tmp/meteoCentre1.0.0`/meteoCentre1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/meteoCentre1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_preferences.cpp moc_wpsrun.cpp moc_ftpclient.cpp moc_psqldriver.cpp moc_csvtopsql.cpp moc_psqltocsv.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_preferences.cpp moc_wpsrun.cpp moc_ftpclient.cpp moc_psqldriver.cpp moc_csvtopsql.cpp moc_psqltocsv.cpp
moc_preferences.cpp: preferences.h
	/usr/bin/moc $(DEFINES) $(INCPATH) preferences.h -o moc_preferences.cpp

moc_wpsrun.cpp: psqldriver.h \
		preferences.h \
		ftpclient.h \
		csvtopsql.h \
		psqltocsv.h \
		wpsrun.h
	/usr/bin/moc $(DEFINES) $(INCPATH) wpsrun.h -o moc_wpsrun.cpp

moc_ftpclient.cpp: ftpclient.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ftpclient.h -o moc_ftpclient.cpp

moc_psqldriver.cpp: psqldriver.h
	/usr/bin/moc $(DEFINES) $(INCPATH) psqldriver.h -o moc_psqldriver.cpp

moc_csvtopsql.cpp: psqldriver.h \
		csvtopsql.h
	/usr/bin/moc $(DEFINES) $(INCPATH) csvtopsql.h -o moc_csvtopsql.cpp

moc_psqltocsv.cpp: psqldriver.h \
		psqltocsv.h
	/usr/bin/moc $(DEFINES) $(INCPATH) psqltocsv.h -o moc_psqltocsv.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

main.o: main.cpp wpsrun.h \
		psqldriver.h \
		preferences.h \
		ftpclient.h \
		csvtopsql.h \
		psqltocsv.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

preferences.o: preferences.cpp preferences.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o preferences.o preferences.cpp

wpsrun.o: wpsrun.cpp wpsrun.h \
		psqldriver.h \
		preferences.h \
		ftpclient.h \
		csvtopsql.h \
		psqltocsv.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wpsrun.o wpsrun.cpp

ftpclient.o: ftpclient.cpp ftpclient.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ftpclient.o ftpclient.cpp

psqldriver.o: psqldriver.cpp psqldriver.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o psqldriver.o psqldriver.cpp

csvtopsql.o: csvtopsql.cpp csvtopsql.h \
		psqldriver.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o csvtopsql.o csvtopsql.cpp

psqltocsv.o: psqltocsv.cpp psqltocsv.h \
		psqldriver.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o psqltocsv.o psqltocsv.cpp

moc_preferences.o: moc_preferences.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_preferences.o moc_preferences.cpp

moc_wpsrun.o: moc_wpsrun.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_wpsrun.o moc_wpsrun.cpp

moc_ftpclient.o: moc_ftpclient.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ftpclient.o moc_ftpclient.cpp

moc_psqldriver.o: moc_psqldriver.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_psqldriver.o moc_psqldriver.cpp

moc_csvtopsql.o: moc_csvtopsql.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_csvtopsql.o moc_csvtopsql.cpp

moc_psqltocsv.o: moc_psqltocsv.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_psqltocsv.o moc_psqltocsv.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

